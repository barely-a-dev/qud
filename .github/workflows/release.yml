name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for the release (e.g., v1.0.0.0)'
        required: true
      version_name:
        description: 'Version name for the release'
        required: true

permissions:
  contents: write

jobs:
  build-test-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install cargo-deb
      run: cargo install cargo-deb

    - name: Build project
      run: cargo build --release

    - name: Create Debian package
      run: |
        mkdir -p debian/usr/bin
        cp target/release/qud debian/usr/bin/qud
        cargo deb -p qud -o ./qud.deb
      
    - name: Check if release exists
      id: check_release
      run: |
        if gh release view ${{ github.event.inputs.tag }} &>/dev/null; then
          echo "::set-output name=exists::true"
        else
          echo "::set-output name=exists::false"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      if: steps.check_release.outputs.exists == 'false'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.tag }}
        release_name: ${{ github.event.inputs.version_name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: steps.check_release.outputs.exists == 'false'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/qud
        asset_name: qud
        asset_content_type: application/octet-stream
        
    - name: Upload Debian Package
      if: steps.check_release.outputs.exists == 'false'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./qud.deb
        asset_name: qud_${{ github.event.inputs.tag }}_amd64.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Release already exists
      if: steps.check_release.outputs.exists == 'true'
      run: |
        echo "Error: A release with the tag ${{ github.event.inputs.tag }} already exists."
        exit 1
